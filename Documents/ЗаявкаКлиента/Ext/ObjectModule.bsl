
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Статус = Перечисления.СтатусыДокументов.Зарегистрирована;                          
	// регистр Заявки Приход
	Движения.Заявки.Записывать = Истина;
	Движение = Движения.Заявки.Добавить();
	Движение.Период = Дата;
	Движение.Статус = Статус;
	Движение.Количество = 1;
	Движение.Сумма = СуммаЗаявки;
	Движение.Номенклатура = Услуга;
	Движение.Мастер = Мастер;
	Движение.Клиент = Клиент;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ  
	
	//Бп = БизнесПроцессы.ПодтверждениеВизитаКлиента.СоздатьБизнесПроцесс();   
	//Бп.Дата = Дата;
	//Бп.Статус = Статус;
	//Бп.Клиент = Клиент;
	//Бп.Записать();
	//Бп.Старт();
КонецПроцедуры



Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Продажа") Тогда
		// Заполнение шапки
		Клиент = ДанныеЗаполнения.Клиент;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Статус = ДанныеЗаполнения.СтатусОплаты;
		СуммаЗаявки = ДанныеЗаполнения.Сумма;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Статус = Перечисления.СтатусыДокументов.Зарегистрирована;                          
КонецПроцедуры

